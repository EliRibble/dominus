#!/usr/bin/env python3
import logging
import os
import re

import requests

import dominus.main
import dominus.platform

SETS = (
    'adventures',
    'base',
    'dark ages',
    'empires',
    'hinterlands',
    'prosperity',
    'guilds',
    'cornucopia',
    'alchemy',
    'seaside',
)

Card = dominus.platform.Card
CARDS = {
    'adventures': (
        ('amulet',              ['action', 'duration'], 3, 0, True),
        ('artificer',           ['action'], 5, 0, True),
        ('bridge troll',        ['action', 'attack', 'duration'], 5, 0, True),
        ('caravan guard',       ['action', 'duration', 'reaction'], 3, 0, True),
        ('coin of the realm',   ['treasure', 'reserve'], 2, 0, True),
        ('distant lands',       ['action', 'reserve', 'victory'], 5, 0, True),
        ('dungeon',             ['action', 'duration'], 3, 0, True),
        ('duplicate',           ['action', 'reserve'], 4, 0, True),
        ('haunted woods',       ['action', 'attack', 'duration'], 5, 0, True),
        ('hireling',            ['action', 'duration'], 6, 0, True),
        ('giant',               ['action', 'attack'], 5, 0, True),
        ('gear',                ['action', 'duration'], 3, 0, True),
        ('guide',               ['action', 'reserve'], 3, 0, True),
        ('lost city',           ['action'], 5, 0, True),
        ('magpie',              ['action'], 4, 0, True),
        ('messenger',           ['action'], 4, 0, True),
        ('miser',               ['action'], 4, 0, True),
        ('port',                ['action'], 4, 0, True),
        ('ranger',              ['action'], 4, 0, True),
        ('ratcatcher',          ['action', 'reserve'], 2, 0, True),
        ('raze',                ['action'], 2, 0, True),
        ('relic',               ['treasure', 'attack'], 5, 0, True),
        ('royal carriage',      ['action', 'reserve'], 5, 0, True),
        ('storyteller',         ['action'], 5, 0, True),
        ('swamp hag',           ['action', 'attack', 'duration'], 5, 0, True),
        ('transmogrify',        ['action', 'reserve'], 4, 0, True),
        ('treasure trove',      ['treasure'], 5, 0, True),
        ('wine merchant',       ['action', 'reserve'], 5, 0, True),

        ('peasant',             ['action', 'traveller'], 2, 0, True),
        ('soldier',             ['action', 'attack', 'traveller'], 3, 0, False),
        ('fugitive',            ['action', 'traveller'], 4, 0, False),
        ('disciple',            ['action', 'traveller'], 5, 0, False),
        ('teacher',             ['action', 'reserve'], 6, 0, False),

        ('page',                ['action', 'traveller'], 2, 0, True),
        ('treasure hunter',     ['action', 'traveller'], 3, 0, False),
        ('warrior',             ['action', 'attack', 'traveller'], 4, 0, False),
        ('hero',                ['action', 'traveller'], 5, 0, False),
        ('champion',            ['action', 'duration'], 6, 0, False),

        ('alms',                ['event'], 0, 0, False),
        ('borrow',              ['event'], 0, 0, False),
        ('quest',               ['event'], 0, 0, False),
        ('save',                ['event'], 1, 0, False),
        ('scouting party',      ['event'], 2, 0, False),
        ('travelling fair',     ['event'], 2, 0, False),
        ('bonfire',             ['event'], 3, 0, False),
        ('expedition',          ['event'], 3, 0, False),
        ('ferry',               ['event'], 3, 0, False),
        ('plan',                ['event'], 3, 0, False),
        ('mission',             ['event'], 4, 0, False),
        ('pilgrimage',          ['event'], 4, 0, False),
        ('ball',                ['event'], 5, 0, False),
        ('raid',                ['event'], 5, 0, False),
        ('seaway',              ['event'], 5, 0, False),
        ('trade',               ['event'], 5, 0, False),
        ('lost arts',           ['event'], 6, 0, False),
        ('training',            ['event'], 6, 0, False),
        ('inheritance',         ['event'], 7, 0, False),
        ('pathfinding',         ['event'], 8, 0, False),
    ),
    'dark ages': (
        ('altar',               ['action'], 6, 0, True),
        ('catacombs',           ['action'], 5, 0, True),
        ('counterfeit',         ['treasure'], 5, 0, True),
        ('forager',             ['action'], 3, 0, True),
        ('graverobber',         ['action'], 5, 0, True),
        ('hunting grounds',     ['action'], 6, 0, True),
        ('ironmonger',          ['action'], 4, 0, True),
        ('junk dealer',         ['action'], 5, 0, True),
        ('knights',             ['action', 'attack', 'knight'], 5, 0, True),
        ('market square',       ['action', 'reaction'], 3, 0, True),
        ('poor house',          ['action'], 1, 0, True),
        ('shelters',            ['action', 'shelter'], 0, 0, False),
    ),
    'empires': (
        ('chariot race',        ['action'], 3, 0, True),
        ('city quarter',        ['action'], 0, 8, True),
        ('emporium',            ['action'], 5, 0, True),
        ('enchantress',         ['action', 'attack', 'duration'], 3, 0, True),
        ('gladiator',           ['action'], 3, 0, True),
        ('patrician',           ['action'], 2, 0, True),
        ('legionary',           ['action', 'attack'], 5, 0, True),
        ('villa',               ['action'], 4, 0, True),

        ('advance',             ['event'], 0, 0, False),
        ('annex',               ['event'], 0, 8, False),

        ('baths',               ['landmark'], 0, 0, False),
    ),
}

LOGGER = logging.getLogger('populate-dominus')
def main():
    logging.basicConfig()
    logging.getLogger().setLevel(logging.DEBUG)

    dominus.main.setup_db()

    create_sets()
    create_cards()
    download_art()

def create_sets():
    all_sets = dominus.platform.get_sets()
    set_names = {_set.name for _set in all_sets}
    to_create = set(SETS).difference(set_names)
    LOGGER.debug("%s sets to create", len(to_create))
    for _set in to_create:
        dominus.platform.create_set(_set)

def create_cards():
    all_cards = dominus.platform.get_cards()
    all_sets = dominus.platform.get_sets()
    sets_by_name = {_set.name: _set for _set in all_sets}
    card_names = {card.name for card in all_cards}
    for _set, cards in CARDS.items():
        _set = sets_by_name[_set]
        for args in cards:
            if args[0] in card_names:
                LOGGER.debug("Skipping %s, its already present", args[0])
                continue
            dominus.platform.create_card(_set, *args)

def download_art():
    all_cards = dominus.platform.get_cards()
    for card in all_cards:
        ensure_has_art(card)

def ensure_has_art(card):
    path = os.path.join('dominus', 'static', 'cards', card.name + '.jpg')
    if os.path.exists(path):
        LOGGER.debug("Already have art for %s", card.name)
        return
    response = requests.get('http://wiki.dominionstrategy.com/index.php/File:{}.jpg'.format(card.name.title()))
    assert response.status_code == 200
    text = response.text
    match = re.search(r'id="file"><a href="(?P<imgpath>[/\w\d\.]+)"><img alt="File:', text)
    if not match:
        import pdb;pdb.set_trace()
    imgpath = match.groupdict()['imgpath']
    response = requests.get('http://wiki.dominionstrategy.com' + imgpath)
    assert response.status_code == 200
    with open(path, 'wb') as f:
        f.write(response.content)
    LOGGER.debug("Wrote %s", path)

if __name__ == '__main__':
    main()
